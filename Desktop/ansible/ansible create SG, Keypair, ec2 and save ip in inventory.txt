***#*# ansible creating Security Group 
       creating Keypair and save in pem file
       launching ec2 and saving ip in inventory


export AWS_ACCESS_KEY_ID='AK123'
export AWS_SECRET_ACCESS_KEY='abc123'



---
- hosts: localhost
  become: true
  gather_facts: False

vars:
  region: ap-south-1
  instance_type: t2.micro
  ami: ami-5b673c34 # RedHat Linux 7.5
  hosts_file: /etc/ansible/hosts

tasks:
 - name: Create security group
 ec2_group:
  aws_access_key: <access key>
  aws_secret_key: <Secret key>
  name: "vniranjan"
  description: "V Niranjan Security Group"
  region: "{{ region }}"
  rules:
    - proto: tcp
      from_port: 22
      to_port: 22
      cidr_ip: 0.0.0.0/0

- name: Create an EC2 key
  ec2_key:
   aws_access_key: <access key>
   aws_secret_key: <Secret key>
   name: "vniranjan"
   region: "{{ region }}"
  register: ec2_key
- name: Save private key (PEM file)
  copy: content="{{ec2_key.key.private_key}}" dest=/home/ansible/vniranjan.pem mode=0600
  when: ec2_key.changed
- name: Create an ec2 instance
   ec2:
    aws_access_key: <access key>
    aws_secret_key: <secret key>
    key_name: vniranjan
    group: vniranjan # security group name
    instance_type: "{{ instance_type}}"
    image: "{{ ami }}"
    wait: true
    region: "{{ region }}"
    count: 1 # default
    count_tag:
      Name: Demo
    instance_tags:
      Name: Demo
  register: ec2
- name: Save IP to inventory file
  lineinfile:
    dest: "{{hosts_file}}"
    insertafter: '\[webservers\]'
    line: "{{item.private_ip}}"
  with_items: "{{ec2.instances}}"


------------------------------------------------------------


#$#$%#!$ Teminating ec2, SG, Keypair


---
- hosts: localhost
  gather_facts: false
  connection: local
  vars:
   instance_ids:
    - 'i-05945003313d20603' # Replace these with your EC2 instance id’s
    - 'i-0ce5ce5820bddf610'

  region: ap-south-1
  keypair_name: vniranjan
  securitygroup_name: vniranjan
 tasks:
 - name: Terminate EC2 instance
   ec2:
    aws_access_key: <access key>
    aws_secret_key: <Secret key>
    instance_ids: '{{instance_ids}}'
    region: '{{region}}'
    state: absent
    wait: true

- name: Remove EC2 Key
  ec2_key:
   aws_access_key: <access key>
   aws_secret_key: <Secret key>
   name: '{{keypair_name}}'
   state: absent
   region: '{{region}}'

- name: Remove Security Group
  ec2_group:
   aws_access_key: <access key>
   aws_secret_key: <Secret key>
   name: '{{securitygroup_name}}'
   state: absent
   region: '{{region}}'